= content_for :page_header do
  %h1= TravelExpenseReport.model_name.human

%nav.navbar.navbar-default
  .container-fluid
    = form_tag travel_expenses_report_path, :method => :get, :class => "form-inline form-report"  do
      %br
      .row
        .form-group.pull-right
          - options = @by_type_options.map {|i| [t("activerecord.models.travel_expense_report.type.#{i}"), i] }
          - type_select = select_tag(:by_type, options_for_select(options, @type), class:'form-control input-sm')
          - options = @by_group_options.map {|i| [t("activerecord.models.travel_expense_report.group.#{i}"), i] }
          - group_select = select_tag :by_group, options_for_select(options, @group), class:'form-control input-sm'
          = t(:expenses_report_intro, :type => type_select, :group => group_select).html_safe
      %br    
      .row
        .pull-right
          %label= t(:expenses_report_request_state)
          = filter_select :request_state_eq, @request_states, :first, :last
          %label= t(:expenses_report_reimbursement_state)
          = filter_select :reimbursement_state_eq, @reimbursement_states, :first, :last
      %br    
      .row
        .pull-right
          %label= t(:expenses_report_event_name)
          = filter_text_field :event_name_contains
          %label= t(:expenses_report_event_country)
          = filter_select :event_country_code_eq, @countries, :first, :last
      %br
      .row
        .pull-right
          - lte = filter_datepicker(:event_start_lte)
          - gte = filter_datepicker(:event_start_gte)
          = t(:expenses_report_event_date, :lte => lte, :gte => gte).html_safe
      %br
      - unless current_role? :none
        .row
          .pull-right
            %label= t(:expenses_report_user_name)
            = filter_text_field :user_name_contains
            %label= t(:expenses_report_user_country)
            = filter_select :user_country_code_eq, @countries, :first, :last
      %br      
      .row
        .pull-right
          %label= t(:report_view_as)
          = submit_tag "html", :name => "format", :class => "btn btn-default"
          = submit_tag "xlsx", :name => "format", :class => "btn btn-default"
      %br
- if @group
  - fields = TravelExpenseReport.fields_for(@group)
  %table.table.table-striped.expense-reports
    %thead
      %tr
        - fields.each do |field|
          %th= t("activerecord.attributes.travel_expense_report.#{field}")
    %tbody
      - @expenses.each do |expense|
        %tr
          - fields.each do |field|
            %td= html_value_for(field, expense)

  = paginate @expenses, num_pages: @num_pages
